{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\threa\\\\OneDrive\\\\Desktop\\\\CODING\\\\final portfolio\\\\employee management\\\\employee-management\\\\client\\\\src\\\\Components\\\\Employees\\\\AllEmployees.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"../Global/Nav\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllEmployees = () => {\n  _s();\n  let dateObj = new Date();\n  let year = dateObj.getFullYear();\n  let month = dateObj.getMonth();\n  let day = dateObj.getDate();\n  const finalMonth = () => {\n    if (month <= 10 & month === 0) {\n      return `0${month + 1}`;\n    } else {\n      return month;\n    }\n  };\n  const finalDay = () => {\n    if (day <= 10) {\n      return `0${day}`;\n    } else {\n      return day;\n    }\n  };\n  let date = `${year}-${finalMonth()}-${finalDay()}`;\n\n  // get employees\n  useEffect(() => {\n    fetch(`${URL}/employees`).then(res => res.json()).then(json => setEmployees(json));\n  }, []);\n  const URL = \"http://localhost:8080\";\n  const [employees, setEmployees] = useState([]);\n\n  // EDIT MODE\n  const [editMode, setEditMode] = useState(false);\n\n  // SET UPDATED INPUTS\n  const [newAddressUpdated, setNewAddressUpdated] = useState(false);\n  const [newDateofbirthUpdated, setNewDateofbirthUpdated] = useState(false);\n  const [newDegreeUpdated, setNewDegreeUpdated] = useState(false);\n  const [newDepartmentUpdated, setNewDepartmentUpdated] = useState(false);\n  const [newDesignationUpdated, setNewDesignationUpdated] = useState(false);\n  const [newEmailUpdated, setNewEmailUpdated] = useState(false);\n  const [newFirstnameUpdated, setNewFirstnameUpdated] = useState(false);\n  const [newGenderUpdated, setNewGenderUpdated] = useState(false);\n  const [newLastnameUpdated, setNewLastnameUpdated] = useState(false);\n  const [newMobileUpdated, setNewMobileUpdated] = useState(false);\n\n  // SET NEW FORM\n  const [newAddress, setNewAddress] = useState(\"\");\n  const [newDateofbirth, setNewDateofbirth] = useState(\"\");\n  const [newDegree, setNewDegree] = useState(\"\");\n  const [newDepartment, setNewDepartment] = useState(\"\");\n  const [newDesignation, setNewDesignation] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newFirstname, setNewFirstname] = useState(\"\");\n  const [newGender, setNewGender] = useState(\"\");\n  const [newLastname, setNewLastname] = useState(\"\");\n  const [newMobile, setNewMobile] = useState(\"\");\n\n  // EDIT  Employee\n  function editEmployee() {\n    setEditMode(!editMode);\n  }\n  console.log(`EDIT MODE: ${editMode}`);\n  console.log(newGender);\n\n  // UPDATE EMPLOYEE\n  async function updateEmployee(e, id) {\n    e.preventDefault();\n    setEditMode(!editMode);\n    const foundEmployee = employees.filter(employee => {\n      const {\n        employeeid\n      } = employee;\n      if (employeeid === id) {\n        return employee;\n      }\n    });\n    console.log(foundEmployee[0]);\n\n    // Post options\n    // const options = {\n    //   method: \"PUT\",\n    //   headers: { \"Content-Type\": \"application/json\" },\n    //   body: JSON.stringify({\n    //     employeeid: foundEmployee[0].employeeid,\n    //     fname: `${\n    //       newFirstnameUpdated ? newFirstname : foundEmployee[0].firstname\n    //     }`,\n    //     lname: `${\n    //       newLastnameUpdated ? newLastname : foundEmployee[0].lastname\n    //     }`,\n    //     gender: `${newGenderUpdated ? newGender : foundEmployee[0].gender}`,\n    //     mobile: `${newMobileUpdated ? newMobile : foundEmployee[0].mobile}`,\n    //     designation: `${\n    //       newDesignationUpdated ? newDesignation : foundEmployee[0].designation\n    //     }`,\n    //     department: `${\n    //       newDepartmentUpdated ? newDepartment : foundEmployee[0].department\n    //     }`,\n    //     address: `${newAddressUpdated ? newAddress : foundEmployee[0].address}`,\n    //     email: `${newEmailUpdated ? newEmail : foundEmployee[0].email}`,\n    //     degree: `${newDegreeUpdated ? newDegree : foundEmployee[0].degree}`,\n    //   }),\n    // };\n\n    // try {\n    //   const fetchPromiseResponse = await fetch(\n    //     `${URL}/update-employee`,\n    //     options\n    //   );\n    //   if (!fetchPromiseResponse.ok) {\n    //     console.log(\n    //       `Something went wrong with fetch from server ${fetchPromiseResponse.status}`\n    //     );\n    //   }\n    //   const jsonPromiseResponse = fetchPromiseResponse.json();\n\n    //   jsonPromiseResponse.then((res) => {\n    //     console.log(res);\n    //   });\n    // } catch {\n    //   (err) => {\n    //     console.log(`FETCH FAILED: ${err}`);\n    //   };\n    // }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ALL EMPLOYEES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), employees.map(employee => {\n      const {\n        address,\n        dateofbirth,\n        degree,\n        department,\n        designation,\n        email,\n        employeeid,\n        firstname,\n        gender,\n        lastname,\n        mobile\n      } = employee;\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"employee-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"\",\n          id: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => updateEmployee(e, address, dateofbirth, degree, department, designation, email, employeeid, firstname, gender, lastname, mobile),\n          autoComplete: \"true\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"\",\n              alt: \"picturrrrrr\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Employee ID: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", employeeid, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Gender: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"\",\n                id: \"\",\n                onChange: e => {\n                  setNewGender(e.target.value);\n                  setNewGenderUpdated(true);\n                },\n                placeholder: editMode & !newGenderUpdated ? gender : newGenderUpdated & editMode ? newGender : gender\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this)\n            }, void 0, false) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", newGenderUpdated ? newGender : gender, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"\",\n              onChange: e => {\n                setNewFirstname(e.target.value);\n                setNewFirstnameUpdated(true);\n              },\n              placeholder: editMode & !newFirstnameUpdated ? firstname : newFirstnameUpdated & editMode ? newFirstname : firstname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", newFirstnameUpdated ? newFirstname : firstname, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Last Name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"\",\n              onChange: e => {\n                setNewLastname(e.target.value);\n                setNewLastnameUpdated(true);\n              },\n              placeholder: editMode & !newLastnameUpdated ? lastname : newLastnameUpdated & editMode ? newLastname : lastname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", newLastnameUpdated ? newLastname : lastname, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"DOB\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => {\n                setNewDateofbirth(e.target.value);\n                setNewDateofbirthUpdated(true);\n              },\n              placeholder: editMode & !newDateofbirthUpdated ? dateofbirth : newDateofbirthUpdated & editMode ? newDateofbirth : dateofbirth\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", dateofbirth, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Department \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => {\n                setNewDepartment(e.target.value);\n                setNewDepartmentUpdated(true);\n              },\n              placeholder: editMode & !newDepartmentUpdated ? department : newDepartmentUpdated & editMode ? newDepartment : department\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", newDepartmentUpdated ? newDepartment : department, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => {\n                setNewDesignation(e.target.value);\n                setNewDesignationUpdated(true);\n              },\n              placeholder: editMode & !newDesignationUpdated ? designation : newDesignationUpdated & editMode ? newDesignation : designation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", newDesignationUpdated ? newDesignation : designation, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Degree\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => {\n                setNewDegree(e.target.value);\n                setNewDegreeUpdated(true);\n              },\n              placeholder: editMode & !newDegreeUpdated ? degree : newDegreeUpdated & editMode ? newDegree : degree\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", newDegreeUpdated ? newDegree : degree, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Mobile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => {\n                setNewMobile(e.target.value);\n                setNewMobileUpdated(true);\n              },\n              placeholder: editMode & !newMobileUpdated ? degree : newMobileUpdated & editMode ? newDegree : degree\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", newMobileUpdated ? newMobile : mobile, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => {\n                setNewEmail(e.target.value);\n                setNewEmailUpdated(true);\n              },\n              placeholder: editMode & !newEmailUpdated ? email : newEmailUpdated & editMode ? newEmail : email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", newEmailUpdated ? newEmail : email, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 17\n            }, this), editMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => {\n                setNewAddress(e.target.value);\n                setNewAddressUpdated(true);\n              },\n              placeholder: editMode & !newAddressUpdated ? address : newAddressUpdated & editMode ? newAddress : address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", newAddressUpdated ? newAddress : address, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 410,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"join date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\" \", date, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this), editMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"UPDATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: editEmployee,\n              type: \"button\",\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              children: \"delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, employeeid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true);\n};\n_s(AllEmployees, \"3L9xBV30G/CvSZMR+c4vcxnlBpE=\");\n_c = AllEmployees;\nexport default AllEmployees;\nvar _c;\n$RefreshReg$(_c, \"AllEmployees\");","map":{"version":3,"names":["React","useEffect","useState","Nav","jsxDEV","_jsxDEV","Fragment","_Fragment","AllEmployees","_s","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","finalMonth","finalDay","date","fetch","URL","then","res","json","setEmployees","employees","editMode","setEditMode","newAddressUpdated","setNewAddressUpdated","newDateofbirthUpdated","setNewDateofbirthUpdated","newDegreeUpdated","setNewDegreeUpdated","newDepartmentUpdated","setNewDepartmentUpdated","newDesignationUpdated","setNewDesignationUpdated","newEmailUpdated","setNewEmailUpdated","newFirstnameUpdated","setNewFirstnameUpdated","newGenderUpdated","setNewGenderUpdated","newLastnameUpdated","setNewLastnameUpdated","newMobileUpdated","setNewMobileUpdated","newAddress","setNewAddress","newDateofbirth","setNewDateofbirth","newDegree","setNewDegree","newDepartment","setNewDepartment","newDesignation","setNewDesignation","newEmail","setNewEmail","newFirstname","setNewFirstname","newGender","setNewGender","newLastname","setNewLastname","newMobile","setNewMobile","editEmployee","console","log","updateEmployee","e","id","preventDefault","foundEmployee","filter","employee","employeeid","children","fileName","_jsxFileName","lineNumber","columnNumber","map","address","dateofbirth","degree","department","designation","email","firstname","gender","lastname","mobile","className","type","name","onSubmit","autoComplete","style","display","src","alt","onChange","target","value","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/threa/OneDrive/Desktop/CODING/final portfolio/employee management/employee-management/client/src/Components/Employees/AllEmployees.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"../Global/Nav\";\r\n\r\nconst AllEmployees = () => {\r\n  let dateObj = new Date();\r\n  let year = dateObj.getFullYear();\r\n  let month = dateObj.getMonth();\r\n  let day = dateObj.getDate();\r\n\r\n  const finalMonth = () => {\r\n    if ((month <= 10) & (month === 0)) {\r\n      return `0${month + 1}`;\r\n    } else {\r\n      return month;\r\n    }\r\n  };\r\n  const finalDay = () => {\r\n    if (day <= 10) {\r\n      return `0${day}`;\r\n    } else {\r\n      return day;\r\n    }\r\n  };\r\n  let date = `${year}-${finalMonth()}-${finalDay()}`;\r\n\r\n  // get employees\r\n  useEffect(() => {\r\n    fetch(`${URL}/employees`)\r\n      .then((res) => res.json())\r\n      .then((json) => setEmployees(json));\r\n  }, []);\r\n\r\n  const URL = \"http://localhost:8080\";\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  // EDIT MODE\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  // SET UPDATED INPUTS\r\n  const [newAddressUpdated, setNewAddressUpdated] = useState(false);\r\n  const [newDateofbirthUpdated, setNewDateofbirthUpdated] = useState(false);\r\n  const [newDegreeUpdated, setNewDegreeUpdated] = useState(false);\r\n  const [newDepartmentUpdated, setNewDepartmentUpdated] = useState(false);\r\n  const [newDesignationUpdated, setNewDesignationUpdated] = useState(false);\r\n  const [newEmailUpdated, setNewEmailUpdated] = useState(false);\r\n  const [newFirstnameUpdated, setNewFirstnameUpdated] = useState(false);\r\n  const [newGenderUpdated, setNewGenderUpdated] = useState(false);\r\n  const [newLastnameUpdated, setNewLastnameUpdated] = useState(false);\r\n  const [newMobileUpdated, setNewMobileUpdated] = useState(false);\r\n\r\n  // SET NEW FORM\r\n  const [newAddress, setNewAddress] = useState(\"\");\r\n  const [newDateofbirth, setNewDateofbirth] = useState(\"\");\r\n  const [newDegree, setNewDegree] = useState(\"\");\r\n  const [newDepartment, setNewDepartment] = useState(\"\");\r\n  const [newDesignation, setNewDesignation] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [newFirstname, setNewFirstname] = useState(\"\");\r\n  const [newGender, setNewGender] = useState(\"\");\r\n  const [newLastname, setNewLastname] = useState(\"\");\r\n  const [newMobile, setNewMobile] = useState(\"\");\r\n\r\n  // EDIT  Employee\r\n  function editEmployee() {\r\n    setEditMode(!editMode);\r\n  }\r\n  console.log(`EDIT MODE: ${editMode}`);\r\n  console.log(newGender);\r\n\r\n  // UPDATE EMPLOYEE\r\n  async function updateEmployee(e, id) {\r\n    e.preventDefault();\r\n    setEditMode(!editMode);\r\n\r\n    const foundEmployee = employees.filter((employee) => {\r\n      const { employeeid } = employee;\r\n      if (employeeid === id) {\r\n        return employee;\r\n      }\r\n    });\r\n\r\n    console.log(foundEmployee[0]);\r\n\r\n    // Post options\r\n    // const options = {\r\n    //   method: \"PUT\",\r\n    //   headers: { \"Content-Type\": \"application/json\" },\r\n    //   body: JSON.stringify({\r\n    //     employeeid: foundEmployee[0].employeeid,\r\n    //     fname: `${\r\n    //       newFirstnameUpdated ? newFirstname : foundEmployee[0].firstname\r\n    //     }`,\r\n    //     lname: `${\r\n    //       newLastnameUpdated ? newLastname : foundEmployee[0].lastname\r\n    //     }`,\r\n    //     gender: `${newGenderUpdated ? newGender : foundEmployee[0].gender}`,\r\n    //     mobile: `${newMobileUpdated ? newMobile : foundEmployee[0].mobile}`,\r\n    //     designation: `${\r\n    //       newDesignationUpdated ? newDesignation : foundEmployee[0].designation\r\n    //     }`,\r\n    //     department: `${\r\n    //       newDepartmentUpdated ? newDepartment : foundEmployee[0].department\r\n    //     }`,\r\n    //     address: `${newAddressUpdated ? newAddress : foundEmployee[0].address}`,\r\n    //     email: `${newEmailUpdated ? newEmail : foundEmployee[0].email}`,\r\n    //     degree: `${newDegreeUpdated ? newDegree : foundEmployee[0].degree}`,\r\n    //   }),\r\n    // };\r\n\r\n    // try {\r\n    //   const fetchPromiseResponse = await fetch(\r\n    //     `${URL}/update-employee`,\r\n    //     options\r\n    //   );\r\n    //   if (!fetchPromiseResponse.ok) {\r\n    //     console.log(\r\n    //       `Something went wrong with fetch from server ${fetchPromiseResponse.status}`\r\n    //     );\r\n    //   }\r\n    //   const jsonPromiseResponse = fetchPromiseResponse.json();\r\n\r\n    //   jsonPromiseResponse.then((res) => {\r\n    //     console.log(res);\r\n    //   });\r\n    // } catch {\r\n    //   (err) => {\r\n    //     console.log(`FETCH FAILED: ${err}`);\r\n    //   };\r\n    // }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <h1>ALL EMPLOYEES</h1>\r\n      {employees.map((employee) => {\r\n        const {\r\n          address,\r\n          dateofbirth,\r\n          degree,\r\n          department,\r\n          designation,\r\n          email,\r\n          employeeid,\r\n          firstname,\r\n          gender,\r\n          lastname,\r\n          mobile,\r\n        } = employee;\r\n\r\n        return (\r\n          <section\r\n            className=\"employee-card\"\r\n            key={employeeid}\r\n          >\r\n            <input\r\n              type=\"radio\"\r\n              name=\"\"\r\n              id=\"\"\r\n            />\r\n            <form\r\n              onSubmit={(e) =>\r\n                updateEmployee(\r\n                  e,\r\n                  address,\r\n                  dateofbirth,\r\n                  degree,\r\n                  department,\r\n                  designation,\r\n                  email,\r\n                  employeeid,\r\n                  firstname,\r\n                  gender,\r\n                  lastname,\r\n                  mobile\r\n                )\r\n              }\r\n              autoComplete=\"true\"\r\n            >\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Image</p>\r\n                <img\r\n                  src=\"\"\r\n                  alt=\"picturrrrrr\"\r\n                />\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Employee ID: </p>\r\n                <p> {employeeid} </p>\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Gender: </p>\r\n                {editMode ? (\r\n                  <>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"\"\r\n                      id=\"\"\r\n                      onChange={(e) => {\r\n                        setNewGender(e.target.value);\r\n                        setNewGenderUpdated(true);\r\n                      }}\r\n                      placeholder={\r\n                        editMode & !newGenderUpdated\r\n                          ? gender\r\n                          : newGenderUpdated & editMode\r\n                          ? newGender\r\n                          : gender\r\n                      }\r\n                    />\r\n                  </>\r\n                ) : (\r\n                  <p> {newGenderUpdated ? newGender : gender} </p>\r\n                )}\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Name: </p>\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"\"\r\n                    onChange={(e) => {\r\n                      setNewFirstname(e.target.value);\r\n                      setNewFirstnameUpdated(true);\r\n                    }}\r\n                    placeholder={\r\n                      editMode & !newFirstnameUpdated\r\n                        ? firstname\r\n                        : newFirstnameUpdated & editMode\r\n                        ? newFirstname\r\n                        : firstname\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p> {newFirstnameUpdated ? newFirstname : firstname} </p>\r\n                )}\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Last Name: </p>\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"\"\r\n                    onChange={(e) => {\r\n                      setNewLastname(e.target.value);\r\n                      setNewLastnameUpdated(true);\r\n                    }}\r\n                    placeholder={\r\n                      editMode & !newLastnameUpdated\r\n                        ? lastname\r\n                        : newLastnameUpdated & editMode\r\n                        ? newLastname\r\n                        : lastname\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p> {newLastnameUpdated ? newLastname : lastname} </p>\r\n                )}\r\n              </div>\r\n\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>DOB</p>\r\n\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setNewDateofbirth(e.target.value);\r\n                      setNewDateofbirthUpdated(true);\r\n                    }}\r\n                    placeholder={\r\n                      editMode & !newDateofbirthUpdated\r\n                        ? dateofbirth\r\n                        : newDateofbirthUpdated & editMode\r\n                        ? newDateofbirth\r\n                        : dateofbirth\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p> {dateofbirth} </p>\r\n                )}\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Department </p>\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setNewDepartment(e.target.value);\r\n                      setNewDepartmentUpdated(true);\r\n                    }}\r\n                    placeholder={\r\n                      editMode & !newDepartmentUpdated\r\n                        ? department\r\n                        : newDepartmentUpdated & editMode\r\n                        ? newDepartment\r\n                        : department\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p> {newDepartmentUpdated ? newDepartment : department} </p>\r\n                )}\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Role</p>\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setNewDesignation(e.target.value);\r\n                      setNewDesignationUpdated(true);\r\n                    }}\r\n                    placeholder={\r\n                      editMode & !newDesignationUpdated\r\n                        ? designation\r\n                        : newDesignationUpdated & editMode\r\n                        ? newDesignation\r\n                        : designation\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p>\r\n                    {\" \"}\r\n                    {newDesignationUpdated ? newDesignation : designation}{\" \"}\r\n                  </p>\r\n                )}\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Degree</p>\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setNewDegree(e.target.value);\r\n                      setNewDegreeUpdated(true);\r\n                    }}\r\n                    placeholder={\r\n                      editMode & !newDegreeUpdated\r\n                        ? degree\r\n                        : newDegreeUpdated & editMode\r\n                        ? newDegree\r\n                        : degree\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p> {newDegreeUpdated ? newDegree : degree} </p>\r\n                )}\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Mobile</p>\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setNewMobile(e.target.value);\r\n                      setNewMobileUpdated(true);\r\n                    }}\r\n                    placeholder={\r\n                      editMode & !newMobileUpdated\r\n                        ? degree\r\n                        : newMobileUpdated & editMode\r\n                        ? newDegree\r\n                        : degree\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p> {newMobileUpdated ? newMobile : mobile} </p>\r\n                )}\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>email</p>\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setNewEmail(e.target.value);\r\n                      setNewEmailUpdated(true);\r\n                    }}\r\n                    placeholder={\r\n                      editMode & !newEmailUpdated\r\n                        ? email\r\n                        : newEmailUpdated & editMode\r\n                        ? newEmail\r\n                        : email\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p> {newEmailUpdated ? newEmail : email} </p>\r\n                )}\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>Address</p>\r\n\r\n                {editMode ? (\r\n                  <input\r\n                    type=\"text\"\r\n                    onChange={(e) => {\r\n                      setNewAddress(e.target.value);\r\n                      setNewAddressUpdated(true);\r\n                    }}\r\n                    placeholder={\r\n                      editMode & !newAddressUpdated\r\n                        ? address\r\n                        : newAddressUpdated & editMode\r\n                        ? newAddress\r\n                        : address\r\n                    }\r\n                  />\r\n                ) : (\r\n                  <p> {newAddressUpdated ? newAddress : address} </p>\r\n                )}\r\n              </div>\r\n              <div style={{ display: \"flex\" }}>\r\n                <p>join date</p>\r\n                <p> {date} </p>\r\n              </div>\r\n              {editMode ? (\r\n                <button type=\"submit\">UPDATE</button>\r\n              ) : (\r\n                <>\r\n                  <button\r\n                    onClick={editEmployee}\r\n                    type=\"button\"\r\n                  >\r\n                    Edit\r\n                  </button>\r\n\r\n                  <button type=\"button\">delete</button>\r\n                </>\r\n              )}\r\n            </form>\r\n          </section>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllEmployees;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}