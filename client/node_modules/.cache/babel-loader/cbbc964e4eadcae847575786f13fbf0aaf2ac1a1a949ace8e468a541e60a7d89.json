{"ast":null,"code":"import { useEffect, useState } from \"react\";\nconst PostEmployee = employeeInitialProps => {\n  const employeeFinalProps = {\n    fname: employeeInitialPropsfname,\n    lname: employeeInitialPropslname,\n    gender: employeeInitialPropsgender,\n    mobile: employeeInitialPropsmobile,\n    password: employeeInitialPropspassword,\n    designation: employeeInitialPropsdesignation,\n    department: employeeInitialPropsdepartment,\n    address: employeeInitialPropsaddress,\n    email: employeeInitialPropsemail,\n    dateofbirth: employeeInitialPropsdob,\n    degree: employeeInitialPropsdegree\n  };\n  // ADD EMPLOYEE TO DB\n  async function addEmployeeNow(employeeInitialProps) {\n    // Post options\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(employeeFinalProps)\n    };\n    try {\n      const fetchPromiseResponse = await fetch(`${URL}/add-employee`, options);\n      if (!fetchPromiseResponse.ok) {\n        console.log(`Something went wrong with fetch from server ${fetchPromiseResponse.status}`);\n      }\n      const jsonPromiseResponse = fetchPromiseResponse.json();\n      jsonPromiseResponse.then(res => {\n        console.log(res);\n      });\n    } catch {\n      err => {\n        console.log(`FETCH FAILED: ${err}`);\n      };\n    }\n  }\n};\n_c = PostEmployee;\nexport default PostEmployee;\nvar _c;\n$RefreshReg$(_c, \"PostEmployee\");","map":{"version":3,"names":["useEffect","useState","PostEmployee","employeeInitialProps","employeeFinalProps","fname","employeeInitialPropsfname","lname","employeeInitialPropslname","gender","employeeInitialPropsgender","mobile","employeeInitialPropsmobile","password","employeeInitialPropspassword","designation","employeeInitialPropsdesignation","department","employeeInitialPropsdepartment","address","employeeInitialPropsaddress","email","employeeInitialPropsemail","dateofbirth","employeeInitialPropsdob","degree","employeeInitialPropsdegree","addEmployeeNow","options","method","headers","body","JSON","stringify","fetchPromiseResponse","fetch","URL","ok","console","log","status","jsonPromiseResponse","json","then","res","err","_c","$RefreshReg$"],"sources":["C:/Users/threa/OneDrive/Desktop/CODING/final portfolio/employee management/employee-management/client/src/Hooks/PostEmployee.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst PostEmployee = (employeeInitialProps) => {\r\n  const employeeFinalProps = {\r\n    fname: employeeInitialPropsfname,\r\n    lname: employeeInitialPropslname,\r\n    gender: employeeInitialPropsgender,\r\n    mobile: employeeInitialPropsmobile,\r\n    password: employeeInitialPropspassword,\r\n    designation: employeeInitialPropsdesignation,\r\n    department: employeeInitialPropsdepartment,\r\n    address: employeeInitialPropsaddress,\r\n    email: employeeInitialPropsemail,\r\n    dateofbirth: employeeInitialPropsdob,\r\n    degree: employeeInitialPropsdegree,\r\n  };\r\n  // ADD EMPLOYEE TO DB\r\n  async function addEmployeeNow(employeeInitialProps) {\r\n    // Post options\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(employeeFinalProps),\r\n    };\r\n\r\n    try {\r\n      const fetchPromiseResponse = await fetch(`${URL}/add-employee`, options);\r\n      if (!fetchPromiseResponse.ok) {\r\n        console.log(\r\n          `Something went wrong with fetch from server ${fetchPromiseResponse.status}`\r\n        );\r\n      }\r\n      const jsonPromiseResponse = fetchPromiseResponse.json();\r\n\r\n      jsonPromiseResponse.then((res) => {\r\n        console.log(res);\r\n      });\r\n    } catch {\r\n      (err) => {\r\n        console.log(`FETCH FAILED: ${err}`);\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default PostEmployee;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAIC,oBAAoB,IAAK;EAC7C,MAAMC,kBAAkB,GAAG;IACzBC,KAAK,EAAEC,yBAAyB;IAChCC,KAAK,EAAEC,yBAAyB;IAChCC,MAAM,EAAEC,0BAA0B;IAClCC,MAAM,EAAEC,0BAA0B;IAClCC,QAAQ,EAAEC,4BAA4B;IACtCC,WAAW,EAAEC,+BAA+B;IAC5CC,UAAU,EAAEC,8BAA8B;IAC1CC,OAAO,EAAEC,2BAA2B;IACpCC,KAAK,EAAEC,yBAAyB;IAChCC,WAAW,EAAEC,uBAAuB;IACpCC,MAAM,EAAEC;EACV,CAAC;EACD;EACA,eAAeC,cAAcA,CAACxB,oBAAoB,EAAE;IAClD;IACA,MAAMyB,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC7B,kBAAkB;IACzC,CAAC;IAED,IAAI;MACF,MAAM8B,oBAAoB,GAAG,MAAMC,KAAK,CAAE,GAAEC,GAAI,eAAc,EAAER,OAAO,CAAC;MACxE,IAAI,CAACM,oBAAoB,CAACG,EAAE,EAAE;QAC5BC,OAAO,CAACC,GAAG,CACR,+CAA8CL,oBAAoB,CAACM,MAAO,EAC7E,CAAC;MACH;MACA,MAAMC,mBAAmB,GAAGP,oBAAoB,CAACQ,IAAI,CAAC,CAAC;MAEvDD,mBAAmB,CAACE,IAAI,CAAEC,GAAG,IAAK;QAChCN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC,CAAC,MAAM;MACLC,GAAG,IAAK;QACPP,OAAO,CAACC,GAAG,CAAE,iBAAgBM,GAAI,EAAC,CAAC;MACrC,CAAC;IACH;EACF;AACF,CAAC;AAACC,EAAA,GAzCI5C,YAAY;AA2ClB,eAAeA,YAAY;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}