{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\threa\\\\OneDrive\\\\Desktop\\\\CODING\\\\final portfolio\\\\employee management\\\\employee-management\\\\client\\\\src\\\\Components\\\\Employees\\\\AllEmployees.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"../Global/Nav\";\nimport EmployeeCard from \"./EmployeeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllEmployees = () => {\n  _s();\n  let dateObj = new Date();\n  let year = dateObj.getFullYear();\n  let month = dateObj.getMonth();\n  let day = dateObj.getDate();\n  const finalMonth = () => {\n    if (month <= 10 & month === 0) {\n      return `0${month + 1}`;\n    } else {\n      return month;\n    }\n  };\n  const finalDay = () => {\n    if (day <= 10) {\n      return `0${day}`;\n    } else {\n      return day;\n    }\n  };\n  let date = `${year}-${finalMonth()}-${finalDay()}`;\n  const URL = \"http://localhost:8080\";\n  // get employees\n  useEffect(() => {\n    fetch(`${URL}/employees`).then(res => res.json()).then(json => setEmployees(json));\n  }, []);\n  const [employees, setEmployees] = useState([]);\n\n  // UPDATE EMPLOYEE\n  async function updateEmployee(e, id) {\n    e.preventDefault();\n\n    // Post options\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        employeeid: employee[0].employeeid,\n        fname: `${newFirstnameUpdated ? newFirstname : employee[0].firstname}`,\n        lname: `${newLastnameUpdated ? newLastname : employee[0].lastname}`,\n        mobile: `${newMobileUpdated ? newMobile : employee[0].mobile}`,\n        designation: `${newDesignationUpdated ? newDesignation : employee[0].designation}`,\n        department: `${newDepartmentUpdated ? newDepartment : employee[0].department}`,\n        email: `${newEmailUpdated ? newEmail : employee[0].email}`\n      })\n    };\n    try {\n      const fetchPromiseResponse = await fetch(`${URL}/update-employee`, options);\n      if (!fetchPromiseResponse.ok) {\n        console.log(`Something went wrong with fetch from server ${fetchPromiseResponse.status}`);\n      }\n      const jsonPromiseResponse = fetchPromiseResponse.json();\n      jsonPromiseResponse.then(res => {\n        console.log(res);\n      });\n    } catch {\n      err => {\n        console.log(`FETCH FAILED: ${err}`);\n      };\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"all-employees\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-employees_header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), employees.map(employee => {\n        const {\n          department,\n          designation,\n          email,\n          employeeid,\n          firstname,\n          lastname,\n          mobile\n        } = employee;\n        return /*#__PURE__*/_jsxDEV(EmployeeCard, {\n          URL: URL,\n          employees: employees,\n          employeeid: employeeid,\n          firstname: firstname,\n          lastname: lastname,\n          department: department,\n          designation: designation,\n          mobile: mobile,\n          email: email,\n          date: date\n        }, employeeid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AllEmployees, \"Y0QRqaTtcUPGfchGWACbYKCh7bE=\");\n_c = AllEmployees;\nexport default AllEmployees;\nvar _c;\n$RefreshReg$(_c, \"AllEmployees\");","map":{"version":3,"names":["React","useEffect","useState","Nav","EmployeeCard","jsxDEV","_jsxDEV","Fragment","_Fragment","AllEmployees","_s","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","finalMonth","finalDay","date","URL","fetch","then","res","json","setEmployees","employees","updateEmployee","e","id","preventDefault","options","method","headers","body","JSON","stringify","employeeid","employee","fname","newFirstnameUpdated","newFirstname","firstname","lname","newLastnameUpdated","newLastname","lastname","mobile","newMobileUpdated","newMobile","designation","newDesignationUpdated","newDesignation","department","newDepartmentUpdated","newDepartment","email","newEmailUpdated","newEmail","fetchPromiseResponse","ok","console","log","status","jsonPromiseResponse","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","_c","$RefreshReg$"],"sources":["C:/Users/threa/OneDrive/Desktop/CODING/final portfolio/employee management/employee-management/client/src/Components/Employees/AllEmployees.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"../Global/Nav\";\r\n\r\nimport EmployeeCard from \"./EmployeeCard\";\r\n\r\nconst AllEmployees = () => {\r\n  let dateObj = new Date();\r\n  let year = dateObj.getFullYear();\r\n  let month = dateObj.getMonth();\r\n  let day = dateObj.getDate();\r\n\r\n  const finalMonth = () => {\r\n    if ((month <= 10) & (month === 0)) {\r\n      return `0${month + 1}`;\r\n    } else {\r\n      return month;\r\n    }\r\n  };\r\n  const finalDay = () => {\r\n    if (day <= 10) {\r\n      return `0${day}`;\r\n    } else {\r\n      return day;\r\n    }\r\n  };\r\n  let date = `${year}-${finalMonth()}-${finalDay()}`;\r\n\r\n  const URL = \"http://localhost:8080\";\r\n  // get employees\r\n  useEffect(() => {\r\n    fetch(`${URL}/employees`)\r\n      .then((res) => res.json())\r\n      .then((json) => setEmployees(json));\r\n  }, []);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  // UPDATE EMPLOYEE\r\n  async function updateEmployee(e, id) {\r\n    e.preventDefault();\r\n\r\n    // Post options\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        employeeid: employee[0].employeeid,\r\n        fname: `${newFirstnameUpdated ? newFirstname : employee[0].firstname}`,\r\n        lname: `${newLastnameUpdated ? newLastname : employee[0].lastname}`,\r\n        mobile: `${newMobileUpdated ? newMobile : employee[0].mobile}`,\r\n        designation: `${\r\n          newDesignationUpdated ? newDesignation : employee[0].designation\r\n        }`,\r\n        department: `${\r\n          newDepartmentUpdated ? newDepartment : employee[0].department\r\n        }`,\r\n        email: `${newEmailUpdated ? newEmail : employee[0].email}`,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const fetchPromiseResponse = await fetch(\r\n        `${URL}/update-employee`,\r\n        options\r\n      );\r\n      if (!fetchPromiseResponse.ok) {\r\n        console.log(\r\n          `Something went wrong with fetch from server ${fetchPromiseResponse.status}`\r\n        );\r\n      }\r\n      const jsonPromiseResponse = fetchPromiseResponse.json();\r\n\r\n      jsonPromiseResponse.then((res) => {\r\n        console.log(res);\r\n      });\r\n    } catch {\r\n      (err) => {\r\n        console.log(`FETCH FAILED: ${err}`);\r\n      };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n\r\n      <section className=\"all-employees\">\r\n        <div className=\"all-employees_header\">\r\n          <h4>Employees</h4>\r\n        </div>\r\n        {employees.map((employee) => {\r\n          const {\r\n            department,\r\n            designation,\r\n            email,\r\n            employeeid,\r\n            firstname,\r\n            lastname,\r\n            mobile,\r\n          } = employee;\r\n\r\n          return (\r\n            <EmployeeCard\r\n              URL={URL}\r\n              employees={employees}\r\n              key={employeeid}\r\n              employeeid={employeeid}\r\n              firstname={firstname}\r\n              lastname={lastname}\r\n              department={department}\r\n              designation={designation}\r\n              mobile={mobile}\r\n              email={email}\r\n              date={date}\r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllEmployees;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}