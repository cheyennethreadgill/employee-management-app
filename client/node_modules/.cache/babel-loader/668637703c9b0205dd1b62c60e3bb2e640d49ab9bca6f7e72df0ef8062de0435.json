{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\threa\\\\OneDrive\\\\Desktop\\\\CODING\\\\final portfolio\\\\employee management\\\\employee-management\\\\client\\\\src\\\\Components\\\\Employees\\\\AllEmployees.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"../Global/Nav\";\nimport { Container } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllEmployees = () => {\n  _s();\n  let dateObj = new Date();\n  let year = dateObj.getFullYear();\n  let month = dateObj.getMonth();\n  let day = dateObj.getDate();\n  const finalMonth = () => {\n    if (month <= 10 & month === 0) {\n      return `0${month + 1}`;\n    } else {\n      return month;\n    }\n  };\n  const finalDay = () => {\n    if (day <= 10) {\n      return `0${day}`;\n    } else {\n      return day;\n    }\n  };\n  let date = `${year}-${finalMonth()}-${finalDay()}`;\n\n  // get employees\n  useEffect(() => {\n    fetch(`${URL}/employees`).then(res => res.json()).then(json => setEmployees(json));\n  }, []);\n  const URL = \"http://localhost:8080\";\n  const [employees, setEmployees] = useState([]);\n\n  // EDIT MODE\n  const [editMode, setEditMode] = useState(false);\n\n  // SET UPDATED INPUTS\n  const [newAddressUpdated, setNewAddressUpdated] = useState(false);\n  const [newDateofbirthUpdated, setNewDateofbirthUpdated] = useState(false);\n  const [newDegreeUpdated, setNewDegreeUpdated] = useState(false);\n  const [newDepartmentUpdated, setNewDepartmentUpdated] = useState(false);\n  const [newDesignationUpdated, setNewDesignationUpdated] = useState(false);\n  const [newEmailUpdated, setNewEmailUpdated] = useState(false);\n  const [newFirstnameUpdated, setNewFirstnameUpdated] = useState(false);\n  const [newGenderUpdated, setNewGenderUpdated] = useState(false);\n  const [newLastnameUpdated, setNewLastnameUpdated] = useState(false);\n  const [newMobileUpdated, setNewMobileUpdated] = useState(false);\n\n  // SET NEW FORM\n  const [newAddress, setNewAddress] = useState(\"\");\n  const [newDateofbirth, setNewDateofbirth] = useState(\"\");\n  const [newDegree, setNewDegree] = useState(\"\");\n  const [newDepartment, setNewDepartment] = useState(\"\");\n  const [newDesignation, setNewDesignation] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newFirstname, setNewFirstname] = useState(\"\");\n  const [newGender, setNewGender] = useState(\"\");\n  const [newLastname, setNewLastname] = useState(\"\");\n  const [newMobile, setNewMobile] = useState(\"\");\n\n  // EDIT  Employee\n  function editEmployee() {\n    setEditMode(!editMode);\n  }\n\n  // UPDATE EMPLOYEE\n  async function updateEmployee(e, id) {\n    e.preventDefault();\n    setEditMode(!editMode);\n    const foundEmployee = employees.filter(employee => {\n      const {\n        employeeid\n      } = employee;\n      if (employeeid === id) {\n        return employee;\n      }\n    });\n\n    // Post options\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        employeeid: foundEmployee[0].employeeid,\n        fname: `${newFirstnameUpdated ? newFirstname : foundEmployee[0].firstname}`,\n        lname: `${newLastnameUpdated ? newLastname : foundEmployee[0].lastname}`,\n        gender: `${newGenderUpdated ? newGender : foundEmployee[0].gender}`,\n        mobile: `${newMobileUpdated ? newMobile : foundEmployee[0].mobile}`,\n        designation: `${newDesignationUpdated ? newDesignation : foundEmployee[0].designation}`,\n        department: `${newDepartmentUpdated ? newDepartment : foundEmployee[0].department}`,\n        address: `${newAddressUpdated ? newAddress : foundEmployee[0].address}`,\n        email: `${newEmailUpdated ? newEmail : foundEmployee[0].email}`,\n        degree: `${newDegreeUpdated ? newDegree : foundEmployee[0].degree}`\n      })\n    };\n    try {\n      const fetchPromiseResponse = await fetch(`${URL}/update-employee`, options);\n      if (!fetchPromiseResponse.ok) {\n        console.log(`Something went wrong with fetch from server ${fetchPromiseResponse.status}`);\n      }\n      const jsonPromiseResponse = fetchPromiseResponse.json();\n      jsonPromiseResponse.then(res => {\n        console.log(res);\n      });\n    } catch {\n      err => {\n        console.log(`FETCH FAILED: ${err}`);\n      };\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ALL EMPLOYEES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AllEmployees, \"3L9xBV30G/CvSZMR+c4vcxnlBpE=\");\n_c = AllEmployees;\nexport default AllEmployees;\nvar _c;\n$RefreshReg$(_c, \"AllEmployees\");","map":{"version":3,"names":["React","useEffect","useState","Nav","Container","jsxDEV","_jsxDEV","Fragment","_Fragment","AllEmployees","_s","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","finalMonth","finalDay","date","fetch","URL","then","res","json","setEmployees","employees","editMode","setEditMode","newAddressUpdated","setNewAddressUpdated","newDateofbirthUpdated","setNewDateofbirthUpdated","newDegreeUpdated","setNewDegreeUpdated","newDepartmentUpdated","setNewDepartmentUpdated","newDesignationUpdated","setNewDesignationUpdated","newEmailUpdated","setNewEmailUpdated","newFirstnameUpdated","setNewFirstnameUpdated","newGenderUpdated","setNewGenderUpdated","newLastnameUpdated","setNewLastnameUpdated","newMobileUpdated","setNewMobileUpdated","newAddress","setNewAddress","newDateofbirth","setNewDateofbirth","newDegree","setNewDegree","newDepartment","setNewDepartment","newDesignation","setNewDesignation","newEmail","setNewEmail","newFirstname","setNewFirstname","newGender","setNewGender","newLastname","setNewLastname","newMobile","setNewMobile","editEmployee","updateEmployee","e","id","preventDefault","foundEmployee","filter","employee","employeeid","options","method","headers","body","JSON","stringify","fname","firstname","lname","lastname","gender","mobile","designation","department","address","email","degree","fetchPromiseResponse","ok","console","log","status","jsonPromiseResponse","err","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/threa/OneDrive/Desktop/CODING/final portfolio/employee management/employee-management/client/src/Components/Employees/AllEmployees.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"../Global/Nav\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst AllEmployees = () => {\r\n  let dateObj = new Date();\r\n  let year = dateObj.getFullYear();\r\n  let month = dateObj.getMonth();\r\n  let day = dateObj.getDate();\r\n\r\n  const finalMonth = () => {\r\n    if ((month <= 10) & (month === 0)) {\r\n      return `0${month + 1}`;\r\n    } else {\r\n      return month;\r\n    }\r\n  };\r\n  const finalDay = () => {\r\n    if (day <= 10) {\r\n      return `0${day}`;\r\n    } else {\r\n      return day;\r\n    }\r\n  };\r\n  let date = `${year}-${finalMonth()}-${finalDay()}`;\r\n\r\n  // get employees\r\n  useEffect(() => {\r\n    fetch(`${URL}/employees`)\r\n      .then((res) => res.json())\r\n      .then((json) => setEmployees(json));\r\n  }, []);\r\n\r\n  const URL = \"http://localhost:8080\";\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  // EDIT MODE\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  // SET UPDATED INPUTS\r\n  const [newAddressUpdated, setNewAddressUpdated] = useState(false);\r\n  const [newDateofbirthUpdated, setNewDateofbirthUpdated] = useState(false);\r\n  const [newDegreeUpdated, setNewDegreeUpdated] = useState(false);\r\n  const [newDepartmentUpdated, setNewDepartmentUpdated] = useState(false);\r\n  const [newDesignationUpdated, setNewDesignationUpdated] = useState(false);\r\n  const [newEmailUpdated, setNewEmailUpdated] = useState(false);\r\n  const [newFirstnameUpdated, setNewFirstnameUpdated] = useState(false);\r\n  const [newGenderUpdated, setNewGenderUpdated] = useState(false);\r\n  const [newLastnameUpdated, setNewLastnameUpdated] = useState(false);\r\n  const [newMobileUpdated, setNewMobileUpdated] = useState(false);\r\n\r\n  // SET NEW FORM\r\n  const [newAddress, setNewAddress] = useState(\"\");\r\n  const [newDateofbirth, setNewDateofbirth] = useState(\"\");\r\n  const [newDegree, setNewDegree] = useState(\"\");\r\n  const [newDepartment, setNewDepartment] = useState(\"\");\r\n  const [newDesignation, setNewDesignation] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [newFirstname, setNewFirstname] = useState(\"\");\r\n  const [newGender, setNewGender] = useState(\"\");\r\n  const [newLastname, setNewLastname] = useState(\"\");\r\n  const [newMobile, setNewMobile] = useState(\"\");\r\n\r\n  // EDIT  Employee\r\n  function editEmployee() {\r\n    setEditMode(!editMode);\r\n  }\r\n\r\n  // UPDATE EMPLOYEE\r\n  async function updateEmployee(e, id) {\r\n    e.preventDefault();\r\n    setEditMode(!editMode);\r\n\r\n    const foundEmployee = employees.filter((employee) => {\r\n      const { employeeid } = employee;\r\n      if (employeeid === id) {\r\n        return employee;\r\n      }\r\n    });\r\n\r\n    // Post options\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        employeeid: foundEmployee[0].employeeid,\r\n        fname: `${\r\n          newFirstnameUpdated ? newFirstname : foundEmployee[0].firstname\r\n        }`,\r\n        lname: `${\r\n          newLastnameUpdated ? newLastname : foundEmployee[0].lastname\r\n        }`,\r\n        gender: `${newGenderUpdated ? newGender : foundEmployee[0].gender}`,\r\n        mobile: `${newMobileUpdated ? newMobile : foundEmployee[0].mobile}`,\r\n        designation: `${\r\n          newDesignationUpdated ? newDesignation : foundEmployee[0].designation\r\n        }`,\r\n        department: `${\r\n          newDepartmentUpdated ? newDepartment : foundEmployee[0].department\r\n        }`,\r\n        address: `${newAddressUpdated ? newAddress : foundEmployee[0].address}`,\r\n        email: `${newEmailUpdated ? newEmail : foundEmployee[0].email}`,\r\n        degree: `${newDegreeUpdated ? newDegree : foundEmployee[0].degree}`,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const fetchPromiseResponse = await fetch(\r\n        `${URL}/update-employee`,\r\n        options\r\n      );\r\n      if (!fetchPromiseResponse.ok) {\r\n        console.log(\r\n          `Something went wrong with fetch from server ${fetchPromiseResponse.status}`\r\n        );\r\n      }\r\n      const jsonPromiseResponse = fetchPromiseResponse.json();\r\n\r\n      jsonPromiseResponse.then((res) => {\r\n        console.log(res);\r\n      });\r\n    } catch {\r\n      (err) => {\r\n        console.log(`FETCH FAILED: ${err}`);\r\n      };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n      <Container>\r\n\r\n      </Container>\r\n      <h1>ALL EMPLOYEES</h1>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllEmployees;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}