{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\threa\\\\OneDrive\\\\Desktop\\\\CODING\\\\final portfolio\\\\employee management\\\\employee-management\\\\client\\\\src\\\\Components\\\\Employees\\\\AllEmployees.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Nav from \"../Global/Nav\";\nimport EmployeeCard from \"./EmployeeCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AllEmployees = () => {\n  _s();\n  let dateObj = new Date();\n  let year = dateObj.getFullYear();\n  let month = dateObj.getMonth();\n  let day = dateObj.getDate();\n  const finalMonth = () => {\n    if (month <= 10 & month === 0) {\n      return `0${month + 1}`;\n    } else {\n      return month;\n    }\n  };\n  const finalDay = () => {\n    if (day <= 10) {\n      return `0${day}`;\n    } else {\n      return day;\n    }\n  };\n  let date = `${year}-${finalMonth()}-${finalDay()}`;\n\n  // SET UPDATED INPUTS\n  const [newDepartmentUpdated, setNewDepartmentUpdated] = useState(false);\n  const [newDesignationUpdated, setNewDesignationUpdated] = useState(false);\n  const [newEmailUpdated, setNewEmailUpdated] = useState(false);\n  const [newFirstnameUpdated, setNewFirstnameUpdated] = useState(false);\n  const [newLastnameUpdated, setNewLastnameUpdated] = useState(false);\n  const [newMobileUpdated, setNewMobileUpdated] = useState(false);\n\n  // SET NEW FORM\n  const [newDepartment, setNewDepartment] = useState(\"\");\n  const [newDesignation, setNewDesignation] = useState(\"\");\n  const [newEmail, setNewEmail] = useState(\"\");\n  const [newFirstname, setNewFirstname] = useState(\"\");\n  const [newLastname, setNewLastname] = useState(\"\");\n  const [newMobile, setNewMobile] = useState(\"\");\n\n  // EDIT  Employee\n  // function editEmployee() {\n  //   setEditMode(!editMode);\n  // }\n\n  // UPDATE EMPLOYEE\n  async function updateEmployee(e, id) {\n    e.preventDefault();\n\n    // Post options\n    const options = {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        employeeid: employee[0].employeeid,\n        fname: `${newFirstnameUpdated ? newFirstname : employee[0].firstname}`,\n        lname: `${newLastnameUpdated ? newLastname : employee[0].lastname}`,\n        mobile: `${newMobileUpdated ? newMobile : employee[0].mobile}`,\n        designation: `${newDesignationUpdated ? newDesignation : employee[0].designation}`,\n        department: `${newDepartmentUpdated ? newDepartment : employee[0].department}`,\n        email: `${newEmailUpdated ? newEmail : employee[0].email}`\n      })\n    };\n    try {\n      const fetchPromiseResponse = await fetch(`${URL}/update-employee`, options);\n      if (!fetchPromiseResponse.ok) {\n        console.log(`Something went wrong with fetch from server ${fetchPromiseResponse.status}`);\n      }\n      const jsonPromiseResponse = fetchPromiseResponse.json();\n      jsonPromiseResponse.then(res => {\n        console.log(res);\n      });\n    } catch {\n      err => {\n        console.log(`FETCH FAILED: ${err}`);\n      };\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"all-employees\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"all-employees_header\",\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Employees\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), employees.map(employee => {\n        const {\n          department,\n          designation,\n          email,\n          employeeid,\n          firstname,\n          lastname,\n          mobile\n        } = employee;\n        return /*#__PURE__*/_jsxDEV(EmployeeCard, {\n          editMode: editMode,\n          btnValue: btnValue,\n          employeeid: employeeid,\n          firstname: firstname,\n          department: department,\n          designation: designation,\n          mobile: mobile,\n          email: email,\n          date: date,\n          newFirstnameUpdated: newFirstnameUpdated,\n          newDepartmentUpdated: newDepartmentUpdated,\n          newDesignationUpdated: newDesignationUpdated,\n          newMobileUpdated: newMobileUpdated,\n          newEmailUpdated: newEmailUpdated\n        }, employeeid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(AllEmployees, \"3QBq4z8c5e4gEQlVzjSr2mwRCVk=\");\n_c = AllEmployees;\nexport default AllEmployees;\nvar _c;\n$RefreshReg$(_c, \"AllEmployees\");","map":{"version":3,"names":["React","useEffect","useState","Nav","EmployeeCard","jsxDEV","_jsxDEV","Fragment","_Fragment","AllEmployees","_s","dateObj","Date","year","getFullYear","month","getMonth","day","getDate","finalMonth","finalDay","date","newDepartmentUpdated","setNewDepartmentUpdated","newDesignationUpdated","setNewDesignationUpdated","newEmailUpdated","setNewEmailUpdated","newFirstnameUpdated","setNewFirstnameUpdated","newLastnameUpdated","setNewLastnameUpdated","newMobileUpdated","setNewMobileUpdated","newDepartment","setNewDepartment","newDesignation","setNewDesignation","newEmail","setNewEmail","newFirstname","setNewFirstname","newLastname","setNewLastname","newMobile","setNewMobile","updateEmployee","e","id","preventDefault","options","method","headers","body","JSON","stringify","employeeid","employee","fname","firstname","lname","lastname","mobile","designation","department","email","fetchPromiseResponse","fetch","URL","ok","console","log","status","jsonPromiseResponse","json","then","res","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","employees","map","editMode","btnValue","_c","$RefreshReg$"],"sources":["C:/Users/threa/OneDrive/Desktop/CODING/final portfolio/employee management/employee-management/client/src/Components/Employees/AllEmployees.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Nav from \"../Global/Nav\";\r\n\r\nimport EmployeeCard from \"./EmployeeCard\";\r\n\r\nconst AllEmployees = () => {\r\n  let dateObj = new Date();\r\n  let year = dateObj.getFullYear();\r\n  let month = dateObj.getMonth();\r\n  let day = dateObj.getDate();\r\n\r\n  const finalMonth = () => {\r\n    if ((month <= 10) & (month === 0)) {\r\n      return `0${month + 1}`;\r\n    } else {\r\n      return month;\r\n    }\r\n  };\r\n  const finalDay = () => {\r\n    if (day <= 10) {\r\n      return `0${day}`;\r\n    } else {\r\n      return day;\r\n    }\r\n  };\r\n  let date = `${year}-${finalMonth()}-${finalDay()}`;\r\n\r\n \r\n\r\n\r\n\r\n\r\n  // SET UPDATED INPUTS\r\n  const [newDepartmentUpdated, setNewDepartmentUpdated] = useState(false);\r\n  const [newDesignationUpdated, setNewDesignationUpdated] = useState(false);\r\n  const [newEmailUpdated, setNewEmailUpdated] = useState(false);\r\n  const [newFirstnameUpdated, setNewFirstnameUpdated] = useState(false);\r\n  const [newLastnameUpdated, setNewLastnameUpdated] = useState(false);\r\n  const [newMobileUpdated, setNewMobileUpdated] = useState(false);\r\n\r\n  // SET NEW FORM\r\n  const [newDepartment, setNewDepartment] = useState(\"\");\r\n  const [newDesignation, setNewDesignation] = useState(\"\");\r\n  const [newEmail, setNewEmail] = useState(\"\");\r\n  const [newFirstname, setNewFirstname] = useState(\"\");\r\n  const [newLastname, setNewLastname] = useState(\"\");\r\n  const [newMobile, setNewMobile] = useState(\"\");\r\n\r\n\r\n\r\n  // EDIT  Employee\r\n  // function editEmployee() {\r\n  //   setEditMode(!editMode);\r\n  // }\r\n\r\n\r\n  // UPDATE EMPLOYEE\r\n  async function updateEmployee(e, id) {\r\n    e.preventDefault();\r\n\r\n    // Post options\r\n    const options = {\r\n      method: \"PUT\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        employeeid: employee[0].employeeid,\r\n        fname: `${newFirstnameUpdated ? newFirstname : employee[0].firstname}`,\r\n        lname: `${newLastnameUpdated ? newLastname : employee[0].lastname}`,\r\n        mobile: `${newMobileUpdated ? newMobile : employee[0].mobile}`,\r\n        designation: `${\r\n          newDesignationUpdated ? newDesignation : employee[0].designation\r\n        }`,\r\n        department: `${\r\n          newDepartmentUpdated ? newDepartment : employee[0].department\r\n        }`,\r\n        email: `${newEmailUpdated ? newEmail : employee[0].email}`,\r\n      }),\r\n    };\r\n\r\n    try {\r\n      const fetchPromiseResponse = await fetch(\r\n        `${URL}/update-employee`,\r\n        options\r\n      );\r\n      if (!fetchPromiseResponse.ok) {\r\n        console.log(\r\n          `Something went wrong with fetch from server ${fetchPromiseResponse.status}`\r\n        );\r\n      }\r\n      const jsonPromiseResponse = fetchPromiseResponse.json();\r\n\r\n      jsonPromiseResponse.then((res) => {\r\n        console.log(res);\r\n      });\r\n    } catch {\r\n      (err) => {\r\n        console.log(`FETCH FAILED: ${err}`);\r\n      };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Nav />\r\n\r\n      <section className=\"all-employees\">\r\n        <div className=\"all-employees_header\">\r\n          <h4>Employees</h4>\r\n        </div>\r\n        {employees.map((employee) => {\r\n          const {\r\n            department,\r\n            designation,\r\n            email,\r\n            employeeid,\r\n            firstname,\r\n            lastname,\r\n            mobile,\r\n          } = employee;\r\n\r\n          return (\r\n            <EmployeeCard\r\n              key={employeeid}\r\n              editMode={editMode}\r\n              btnValue={btnValue}\r\n              employeeid={employeeid}\r\n              firstname={firstname}\r\n              department={department}\r\n              designation={designation}\r\n              mobile={mobile}\r\n              email={email}\r\n              date={date}\r\n              newFirstnameUpdated={newFirstnameUpdated}\r\n              newDepartmentUpdated={newDepartmentUpdated}\r\n              newDesignationUpdated={newDesignationUpdated}\r\n              newMobileUpdated={newMobileUpdated}\r\n              newEmailUpdated={newEmailUpdated}\r\n              \r\n            />\r\n          );\r\n        })}\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllEmployees;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}