{"ast":null,"code":"import { useEffect, useState } from \"react\";\nconst PostEmployee = (employeeInitialProps, e) => {\n  e.preventDefault();\n  const employeeFinalProps = {\n    fname: employeeInitialProps.fname,\n    lname: employeeInitialProps.lname,\n    gender: employeeInitialProps.gender,\n    mobile: employeeInitialProps.mobile,\n    password: employeeInitialProps.password,\n    designation: employeeInitialProps.designation,\n    department: employeeInitialProps.department,\n    address: employeeInitialProps.address,\n    email: employeeInitialProps.email,\n    dateofbirth: employeeInitialProps.dob,\n    degree: employeeInitialProps.degree\n  };\n  // ADD EMPLOYEE TO DB\n  async function addEmployeeNow(employeeFinalProps) {\n    // Post options\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(employeeFinalProps)\n    };\n    try {\n      const fetchPromiseResponse = await fetch(`${URL}/add-employee`, options);\n      if (!fetchPromiseResponse.ok) {\n        console.log(`Something went wrong with fetch from server ${fetchPromiseResponse.status}`);\n      }\n      const jsonPromiseResponse = fetchPromiseResponse.json();\n      jsonPromiseResponse.then(res => {\n        console.log(res);\n      });\n    } catch {\n      err => {\n        console.log(`FETCH FAILED: ${err}`);\n      };\n    }\n  }\n};\n_c = PostEmployee;\nexport default PostEmployee;\nvar _c;\n$RefreshReg$(_c, \"PostEmployee\");","map":{"version":3,"names":["useEffect","useState","PostEmployee","employeeInitialProps","e","preventDefault","employeeFinalProps","fname","lname","gender","mobile","password","designation","department","address","email","dateofbirth","dob","degree","addEmployeeNow","options","method","headers","body","JSON","stringify","fetchPromiseResponse","fetch","URL","ok","console","log","status","jsonPromiseResponse","json","then","res","err","_c","$RefreshReg$"],"sources":["C:/Users/threa/OneDrive/Desktop/CODING/final portfolio/employee management/employee-management/client/src/Hooks/PostEmployee.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\n\r\nconst PostEmployee = (employeeInitialProps, e) => {\r\n  e.preventDefault();\r\n  const employeeFinalProps = {\r\n    fname: employeeInitialProps.fname,\r\n    lname: employeeInitialProps.lname,\r\n    gender: employeeInitialProps.gender,\r\n    mobile: employeeInitialProps.mobile,\r\n    password: employeeInitialProps.password,\r\n    designation: employeeInitialProps.designation,\r\n    department: employeeInitialProps.department,\r\n    address: employeeInitialProps.address,\r\n    email: employeeInitialProps.email,\r\n    dateofbirth: employeeInitialProps.dob,\r\n    degree: employeeInitialProps.degree,\r\n  };\r\n  // ADD EMPLOYEE TO DB\r\n  async function addEmployeeNow(employeeFinalProps) {\r\n    // Post options\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(employeeFinalProps),\r\n    };\r\n\r\n    try {\r\n      const fetchPromiseResponse = await fetch(`${URL}/add-employee`, options);\r\n      if (!fetchPromiseResponse.ok) {\r\n        console.log(\r\n          `Something went wrong with fetch from server ${fetchPromiseResponse.status}`\r\n        );\r\n      }\r\n      const jsonPromiseResponse = fetchPromiseResponse.json();\r\n\r\n      jsonPromiseResponse.then((res) => {\r\n        console.log(res);\r\n      });\r\n    } catch {\r\n      (err) => {\r\n        console.log(`FETCH FAILED: ${err}`);\r\n      };\r\n    }\r\n  }\r\n};\r\n\r\nexport default PostEmployee;\r\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,MAAMC,YAAY,GAAGA,CAACC,oBAAoB,EAAEC,CAAC,KAAK;EAChDA,CAAC,CAACC,cAAc,CAAC,CAAC;EAClB,MAAMC,kBAAkB,GAAG;IACzBC,KAAK,EAAEJ,oBAAoB,CAACI,KAAK;IACjCC,KAAK,EAAEL,oBAAoB,CAACK,KAAK;IACjCC,MAAM,EAAEN,oBAAoB,CAACM,MAAM;IACnCC,MAAM,EAAEP,oBAAoB,CAACO,MAAM;IACnCC,QAAQ,EAAER,oBAAoB,CAACQ,QAAQ;IACvCC,WAAW,EAAET,oBAAoB,CAACS,WAAW;IAC7CC,UAAU,EAAEV,oBAAoB,CAACU,UAAU;IAC3CC,OAAO,EAAEX,oBAAoB,CAACW,OAAO;IACrCC,KAAK,EAAEZ,oBAAoB,CAACY,KAAK;IACjCC,WAAW,EAAEb,oBAAoB,CAACc,GAAG;IACrCC,MAAM,EAAEf,oBAAoB,CAACe;EAC/B,CAAC;EACD;EACA,eAAeC,cAAcA,CAACb,kBAAkB,EAAE;IAChD;IACA,MAAMc,OAAO,GAAG;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACnB,kBAAkB;IACzC,CAAC;IAED,IAAI;MACF,MAAMoB,oBAAoB,GAAG,MAAMC,KAAK,CAAE,GAAEC,GAAI,eAAc,EAAER,OAAO,CAAC;MACxE,IAAI,CAACM,oBAAoB,CAACG,EAAE,EAAE;QAC5BC,OAAO,CAACC,GAAG,CACR,+CAA8CL,oBAAoB,CAACM,MAAO,EAC7E,CAAC;MACH;MACA,MAAMC,mBAAmB,GAAGP,oBAAoB,CAACQ,IAAI,CAAC,CAAC;MAEvDD,mBAAmB,CAACE,IAAI,CAAEC,GAAG,IAAK;QAChCN,OAAO,CAACC,GAAG,CAACK,GAAG,CAAC;MAClB,CAAC,CAAC;IACJ,CAAC,CAAC,MAAM;MACLC,GAAG,IAAK;QACPP,OAAO,CAACC,GAAG,CAAE,iBAAgBM,GAAI,EAAC,CAAC;MACrC,CAAC;IACH;EACF;AACF,CAAC;AAACC,EAAA,GA1CIpC,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}